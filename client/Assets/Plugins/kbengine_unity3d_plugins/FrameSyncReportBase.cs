/*
	Generated by KBEngine!
	Please do not modify this file!
	Please inherit this module, such as: (class FrameSyncReport : FrameSyncReportBase)
	tools = kbcmd
*/

namespace KBEngine
{
	using UnityEngine;
	using System;
	using System.Collections;
	using System.Collections.Generic;

	// defined in */scripts/entity_defs/FrameSyncReport.def
	public abstract class FrameSyncReportBase : EntityComponent
	{
		public EntityBaseEntityCall_FrameSyncReportBase baseEntityCall = null;
		public EntityCellEntityCall_FrameSyncReportBase cellEntityCall = null;

		public SByte seatNo = 0;
		public virtual void onSeatNoChanged(SByte oldValue) {}

		public abstract void onFrameMessage(FS_FRAME_DATA arg1); 

		public override void createFromStream(MemoryStream stream)
		{
			base.createFromStream(stream);
			baseEntityCall = new EntityBaseEntityCall_FrameSyncReportBase(entityComponentPropertyID, ownerID);
			cellEntityCall = new EntityCellEntityCall_FrameSyncReportBase(entityComponentPropertyID, ownerID);
		}

		public override void onRemoteMethodCall(UInt16 methodUtype, MemoryStream stream)
		{
			ScriptModule sm = EntityDef.moduledefs["FrameSyncReport"];

			Method method = sm.idmethods[methodUtype];
			switch(method.methodUtype)
			{
				case 4:
					FS_FRAME_DATA onFrameMessage_arg1 = ((DATATYPE_FS_FRAME_DATA)method.args[0]).createFromStreamEx(stream);
					onFrameMessage(onFrameMessage_arg1);
					break;
				default:
					break;
			};
		}

		public override void onUpdatePropertys(UInt16 propUtype, MemoryStream stream, int maxCount)
		{
			ScriptModule sm = EntityDef.moduledefs["FrameSyncReport"];
			Dictionary<UInt16, Property> pdatas = sm.idpropertys;

			while(stream.length() > 0 && maxCount-- != 0)
			{
				UInt16 _t_utype = 0;
				UInt16 _t_child_utype = propUtype;

				if(_t_child_utype == 0)
				{
					if(sm.usePropertyDescrAlias)
					{
						_t_utype = stream.readUint8();
						_t_child_utype = stream.readUint8();
					}
					else
					{
						_t_utype = stream.readUint16();
						_t_child_utype = stream.readUint16();
					}
				}

				Property prop = null;

				prop = pdatas[_t_child_utype];

				switch(prop.properUtype)
				{
					case 8:
						SByte oldval_seatNo = seatNo;
						seatNo = stream.readInt8();

						if(prop.isBase())
						{
							if(owner.inited)
								onSeatNoChanged(oldval_seatNo);
						}
						else
						{
							if(owner.inWorld)
								onSeatNoChanged(oldval_seatNo);
						}

						break;
					default:
						break;
				};
			}
		}

		public override void callPropertysSetMethods()
		{
			ScriptModule sm = EntityDef.moduledefs["FrameSyncReport"];
			Dictionary<UInt16, Property> pdatas = sm.idpropertys;

			SByte oldval_seatNo = seatNo;
			Property prop_seatNo = pdatas[4];
			if(prop_seatNo.isBase())
			{
				if(owner.inited && !owner.inWorld)
					onSeatNoChanged(oldval_seatNo);
			}
			else
			{
				if(owner.inWorld)
				{
					if(prop_seatNo.isOwnerOnly() && !owner.isPlayer())
					{
					}
					else
					{
						onSeatNoChanged(oldval_seatNo);
					}
				}
			}

		}
	}
}